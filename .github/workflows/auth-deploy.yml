name: Deploy services

on:
  push:
    branches:
      - 'main'

jobs:
  init:
    name: Check changed files
    outputs:
      auth_service: ${{ steps.check_files.outputs.auth_service }}
      web_launcher: ${{ steps.check_files.outputs.web_launcher }}
      proxy: ${{ steps.check_files.outputs.proxy }}
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: check modified files
        id: check_files
        run: |
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file; do
              echo $file
              if [[ $file == auth-service/* ]]; then
                echo "auth-service will be rebuild"
                echo "::set-output name=auth_service::true"
              elif [[ $file == web-launcher/* ]]; then
                echo "web-launcher will be rebuild"
                echo "::set-output name=web_launcher::true"
              elif [[ $file == conf.d/* ]]; then
                echo "nginx will be rebuild"
                echo "::set-output name=proxy::true"
              else
                echo "file does not belong to any service"
              fi
            done < files.txt
      - name: Create env file for backend
        run: |
          echo "${{secrets.ENV_FILE}}" > .env
      - name: Create env file for web launcher
        run: |
          echo "${{secrets.WEB_ENV_FILE}}" > ./web-launcher/.env

  auth-service:
    runs-on: self-hosted
    needs: init
    if: needs.init.outputs.auth_service == 'true'
    steps:
      - name: Run auth service
        run: docker compose up -d --build auth-service
      - name: Status
        run: docker ps -a

  web-service:
    runs-on: self-hosted
    needs: init
    if: needs.init.outputs.web_launcher == 'true'
    steps:
      - name: Run web launcher
        run: docker compose up -d --build web-launcher
  
  proxy:
    runs-on: self-hosted
    needs: init
    if: needs.init.outputs.proxy == 'true'
    steps:
      - name: run certbot
        run: docker compose up -d --build certbot 
      - name: run nginx
        run: docker compose up -d --build nginx